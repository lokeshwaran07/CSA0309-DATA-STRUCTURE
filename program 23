#include <stdio.h>
#define INF 9999
#define MAX 10

int n, cost[MAX][MAX];

void dijkstra(int src) {
    int dist[MAX], visited[MAX] = {0};
    for (int i = 0; i < n; i++) dist[i] = cost[src][i];
    dist[src] = 0; visited[src] = 1;

    for (int count = 1; count < n - 1; count++) {
        int min = INF, u = -1;
        for (int i = 0; i < n; i++)
            if (!visited[i] && dist[i] < min) { min = dist[i]; u = i; }
        visited[u] = 1;

        for (int v = 0; v < n; v++)
            if (!visited[v] && dist[u] + cost[u][v] < dist[v])
                dist[v] = dist[u] + cost[u][v];
    }

    printf("Shortest distances from %d:\n", src);
    for (int i = 0; i < n; i++)
        printf("To %d: %d\n", i, dist[i]);
}

int main() {
    printf("Enter number of vertices: ");
    scanf("%d", &n);

    printf("Enter cost matrix (9999 for no edge):\n");
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            scanf("%d", &cost[i][j]);

    dijkstra(0);
    return 0;
}
