#include <stdio.h>
#define MAX 100
void display(int arr[], int n) {
    int i;
    if (n == 0) {
        printf("Array is empty.\n");
        return;
    }
    printf("Array elements: ");
    for (i = 0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");
}
int insert(int arr[], int n, int pos, int val) {
    int i;
    if (pos < 1 || pos > n + 1) {
        printf("Invalid position.\n");
        return n;
    }
    if (n == MAX) {
        printf("Array is full.\n");
        return n;
    }
    for (i = n; i >= pos; i--)
        arr[i] = arr[i - 1];
    arr[pos - 1] = val;
    return n + 1;
}
int delete(int arr[], int n, int pos) {
    int i;
    if (pos < 1 || pos > n) {
        printf("Invalid position.\n");
        return n;
    }
    for (i = pos - 1; i < n - 1; i++)
        arr[i] = arr[i + 1];
    return n - 1;
}
int main() {
    int arr[MAX], n = 0, choice, val, pos;
    while (1) {
        printf("\nMenu:\n");
        printf("1. Insert\n2. Delete\n3. Display\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                printf("Enter value to insert: ");
                scanf("%d", &val);
                printf("Enter position to insert at: ");
                scanf("%d", &pos);
                n = insert(arr, n, pos, val);
                break;
            case 2:
                if (n == 0) {
                    printf("Array is empty.\n");
                    break;
                }
                printf("Enter position to delete: ");
                scanf("%d", &pos);
                n = delete(arr, n, pos);
                break;
            case 3:
                display(arr, n);
                break;
            case 4:
                return 0;
            default:
                printf("Invalid choice.\n");
        }
    }
    return 0;
}
